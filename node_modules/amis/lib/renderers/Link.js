amis.define('node_modules/amis/lib/renderers/Link', function(require, exports, module, define) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.LinkFieldRenderer = exports.LinkCmpt = void 0;
  var tslib_1 = require("node_modules/tslib/tslib");
  var react_1 = (0, tslib_1.__importDefault)(require("node_modules/react/index"));
  var factory_1 = require("node_modules/amis/lib/factory");
  var helper_1 = require("node_modules/amis/lib/utils/helper");
  var tpl_1 = require("node_modules/amis/lib/utils/tpl");
  var Badge_1 = require("node_modules/amis/lib/components/Badge");
  var Link_1 = (0, tslib_1.__importDefault)(require("node_modules/amis/lib/components/Link"));
  var LinkCmpt = /** @class */ (function (_super) {
      (0, tslib_1.__extends)(LinkCmpt, _super);
      function LinkCmpt() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      LinkCmpt.prototype.render = function () {
          var _a = this.props, className = _a.className, body = _a.body, href = _a.href, cx = _a.classnames, blank = _a.blank, disabled = _a.disabled, htmlTarget = _a.htmlTarget, data = _a.data, render = _a.render, __ = _a.translate, title = _a.title, icon = _a.icon, position = _a.position;
          var value = (0, helper_1.getPropValue)(this.props);
          var finnalHref = href ? (0, tpl_1.filter)(href, data, '| raw') : '';
          var text = body
              ? render('body', body)
              : finnalHref || value || __('link');
          return (react_1.default.createElement(Link_1.default, { className: className, href: finnalHref, body: text, blank: blank, disabled: disabled, title: title, htmlTarget: htmlTarget, icon: icon, position: position }));
      };
      LinkCmpt.defaultProps = {
          blank: true,
          disabled: false,
          htmlTarget: '_self'
      };
      return LinkCmpt;
  }(react_1.default.Component));
  exports.LinkCmpt = LinkCmpt;
  var LinkFieldRenderer = /** @class */ (function (_super) {
      (0, tslib_1.__extends)(LinkFieldRenderer, _super);
      function LinkFieldRenderer() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      LinkFieldRenderer = (0, tslib_1.__decorate)([
          (0, factory_1.Renderer)({
              type: 'link'
          })
          // @ts-ignore 类型没搞定
          ,
          Badge_1.withBadge
      ], LinkFieldRenderer);
      return LinkFieldRenderer;
  }(LinkCmpt));
  exports.LinkFieldRenderer = LinkFieldRenderer;
  //# sourceMappingURL=./renderers/Link.js.map
  

});
